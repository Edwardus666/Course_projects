scale(plot.ts(virusData))
plot(virusData)
?plot
?ggplot2
I use tidyverse package which includes many packages that used for plotting the data.
```{r}
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
??ggplot
plot(virusData$new_cases)
plot(world_data$new_cases)
?plot
par(mfrow=c(1,4))
plot(world_data$new_cases)
plot(world_data$new_cases)
plot(world_data$total_cases)
plot(world_data$new_deaths)
plot(world_data$total_deaths)
par(mfrow=c(1,4))
plot(world_data$new_cases)
plot(world_data$total_cases)
plot(world_data$new_deaths)
plot(world_data$total_deaths)
par(mfrow=c(1,4))
plot(world_data$new_cases)
plot(world_data$total_cases)
plot(world_data$new_deaths)
plot(world_data$total_deaths)
par(mfrow=c(1,4))
plot(country_data$new_cases)
plot(country_data$total_cases)
plot(country_data$new_deaths)
plot(country_data$total_deaths)
par(mfrow=c(1,4))
plot(country_data$new_cases)
plot(country_data$total_cases)
plot(country_data$new_deaths)
plot(country_data$total_deaths)
par(mfrow=c(1,2))
plot(country_data$new_cases)
plot(country_data$total_cases)
par(mfrow=c(1,4))
plot(country_data$new_cases)
plot(country_data$total_cases)
plot(country_data$new_deaths)
plot(country_data$total_deaths)
ggplot(world_data,aes(x=value, y=cases))+
geom_point(aes(color = country_data$date))
ggplot(world_data,aes(x=total_cases, y=new_cases))+
geom_point(aes(color = country_data$date))
head(virusData)
tail(virusData)
knitr::opts_chunk$set(echo = FALSE)
install.packages("openxlsx")
library(xlsx)
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
knitr::opts_chunk$set(echo = FALSE)
install.packages("openxlsx")
library(xlsx)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
summary(country_data)
summary(world_data)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
summary(country_data)
summary(world_data)
str(country_data)
str(world_data)
class(country_data$date)
class(world_data$date)
country_data$date<- as.Date(country_data$date,format = "%m/%d/%Y")
class(country_data$date)
virusData <- rbind(country_data,world_data)
head(virusData)
tail(virusData)
any(is.na(virusData))
install.packages("tidyverse")
library(tidyverse)
par(mfrow=c(1,4))
plot(world_data$new_cases)
plot(world_data$total_cases)
plot(world_data$new_deaths)
plot(world_data$total_deaths)
par(mfrow=c(1,4))
plot(country_data$new_cases)
plot(country_data$total_cases)
plot(country_data$new_deaths)
plot(country_data$total_deaths)
ggplot(virusData, aes(x=date, y=total_cases, size=total_deaths,color=location))+geom_line()
ggplot(virusData, aes(x=date, y=total_deaths, size=total_cases))+geom_line()
virusData %>% ggplot(aes(date, total_cases))+geom_line()
country_data %>%
ggplot(aes(date, total_cases, group = location))+geom_line()
linearmodel <- lm(total_cases ~total_deaths, data=virusData)
summary(linearmodel)
ggplot(virusData,aes(x = total_deaths,y= total_cases))+geom_point()+stat_smooth(method = "lm", col="blue")
par(mfrow=c(1,2))
#still make a linear model
linearmodel1 <- lm(total_cases ~total_deaths, data=country_data)
#plot the model
ggplot(country_data,aes(x = total_cases,y=total_deaths))+ggtitle("country_data") +geom_point()+stat_smooth(method = "lm", col="blue")
#for world data doing the same steps
linearmodel2 <- lm(total_cases ~total_deaths, data=world_data)
ggplot(world_data,aes(x = total_cases,y=total_deaths)) +geom_point()+stat_smooth(method = "lm", col="blue")+ggtitle("world_data")
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data
ggplot(subcountry_data,aes(x=date, y= total_cases, size=total_deaths))+geom_point
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data
ggplot(subcountry_data,aes(x=date, y= total_cases, size=total_deaths))+geom_point()
top10countries <- top10countries[c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#select top 10 countries:
top10countries <- country_data[c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
View(top10countries)
View(top10countries)
View(subcountry_data)
View(subcountry_data)
top10countries <- country_data[c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China")]
?%in
?%in%
#select top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China")]
#select top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(subcountry_data,aes(x=date, y= total_cases, size=total_deaths))+geom_point()
View(top10countries)
View(top10countries)
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths))+geom_point()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths),colors = location)+geom_point()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths),color = location)+geom_point()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location))+geom_point()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(log(top10countries),aes(x=date, y= total_cases, size=total_deaths,color = location))+geom_point()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location))+geom_point()
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location, label = rownames(top10countries)))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location, label = location(top10countries)))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location, label = rownames(top10countries$location)))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location, label = top10countries$location)))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location, label = top10countries$location))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
ggplot(top10countries,aes(x=date, y= total_cases, size=total_deaths,color = location, label = location))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location, label = location))+geom_point()+geom_text()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location, label = location))+geom_point()+geom_line()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths ))+geom_point()+geom_line()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths, ))+geom_point()
ggplot(top10countries,aes(x=date,y=total_cases,group=name,color =location))+geom_line()
ggplot(top10countries,aes(x=date,y=total_cases,group=location,color =location))+geom_line()
ggplot(top10countries,aes(x=date, y= total_cases, group = date ))+geom_boxplot()
ggplot(virusData,aes(x=date, y= total_cases, group = date ))+geom_boxplot()
ggplot(world_data,aes(x=date, y= total_cases, group = date ))+geom_boxplot()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()+geom_smooth()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
ggplot(top10countries，aes(x=year，y=life_exp，group = location)
ggplot(top10countries,aes(x=year,y=total_cases,group = location))
ggplot(top10countries,aes(x=date,y=total_cases,group = location))
+ geom_line()+ facet_wrap(~location)
ggplot(top10countries,aes(x=date,y=total_cases,group = location))
+geom_line()+facet_wrap(~location)
ggplot(top10countries,aes(x=date,y=total_cases,group = location))+geom_line()+facet_wrap(~location)
ggplot(top10countries,aes(x=date,y=total_cases,group = location,color = location))+geom_line()+facet_wrap(~location)
ggplot(top10countries,aes(x=date,y=total_cases,group = location,color = location, size = total_deaths))+geom_line()+facet_wrap(~location)
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States"," Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States","Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
ggplot(top10countries,aes(x=date,y=total_cases,group = location,color = location, size = total_deaths))+geom_line()+facet_wrap(~location)
top10countries <- scale(top10countries)
top10countries <- scale(top10countries$total_cases)
top10countries <- scale(top10countries$total_cases)
top10countries <- scale(top10countries$total_cases)
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
top10countries <- scale(top10countries$total_cases)
top10countries <- scale(top10countries$total_cases)
top10countries <- scale(top10countries)
top10countries <- scale(top10countries)
ggplot(top10countries$top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
top10countries <- scale(top10countries)
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
top10countries <- scale(top10countries)
top10countries <- data.frame(top10countries)
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
View(top10countries)
View(top10countries)
rm.top10countries
rm.top10countries
View(top10countries)
View(top10countries)
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States","Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
ggplot(top10countries,aes(x=date,y=total_cases,group = location,color = location, size = total_deaths))+geom_line()+facet_wrap(~location)
top10countries <- scale(top10countries)
View(top10countries)
View(top10countries)
?scale
top10countries$total_cases <- scale(top10countries$total_cases)
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
top10countries$total_cases <- scale(top10countries$total_cases)
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States","Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
top10countries %>% scale() %>% dis(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.6,hang=-1)
top10countries$total_cases %>% scale() %>% dis(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.6,hang=-1)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.6,hang=-1)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.6,hang=-4)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=1.6,hang=-4)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.3,hang=-4)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.1,hang=-4)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.5,hang=-4)
USArrests
top10countries %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.5,hang=-4)
top10countries$total_cases %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.5,hang=-4)
library(factoextra)
library(factoextra)
library(dendentend)
library(cluster)
top10countries %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.5,hang=-4)
library(factoextra)
library(cluster)
top10countries %>% scale() %>% dist(method = "euclidean") %>% hclust(method="complete") %>% plot(cex=0.5,hang=-4)
fviz_nbclust(top10countries,FUn=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
?USArrests
view(USArrests)
par(frow(1,3))
par(nfrow(1,3))
par(nfow(1,3))
library(factoextra)
library(cluster)
par(mfrow=c(1,2))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
library(factoextra)
library(cluster)
par(mfrow=c(1,2))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
gap_stat<- clusGap(top10countries, FUN=hcut,nstart = 25, K.max = 10, B=50)
library(factoextra)
library(cluster)
par(mfrow=c(1,3))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
gap_stat<- clusGap(top10countries, FUN=hcut,nstart = 25, K.max = 10, B=50)
gap_stat<- clusGap(top10countries, FUN=hcut,nstart = 25, K.max = 10, B=50)
fviz_nbclust(top10countries$total_cases,FUN=hcut, method = "silhouette")
gap_stat<- clusGap(top10countries$total_cases, FUN=hcut,nstart = 25, K.max = 10, B=50)
gap_stat<- clusGap(top10countries$total_cases, FUN=hcut,nstart = 25, K.max = 10, B=50)
gap_stat<- clusGap(top10countries$total_cases, FUN=hcut,nstart = 25, K.max = 4, B=50)
gap_stat<- clusGap(top10countries$total_cases, FUN=hcut,nstart = 25, K.max = 4, B=50)
library(factoextra)
library(cluster)
par(mfrow=c(1,3))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
k1<- kmeans(top10countries,centers = 5, nstart = 25)
k1<- kmeans(top10countries,centers = 5, nstart = 25)
k1 <- na.omit(k1)
k1 <- na.omit(top10countries)
k1<- kmeans(top10countries,centers = 5, nstart = 25)
k1 <- na.omit(top10countries)
k1<- kmeans(top10countries,centers = 2, nstart = 25)
k1 <- na.omit(top10countries)
k1<- kmeans(top10countries, centers = 2, nstart = 25)
top10countries %>% na.omit() %>% scale()
top10countries$total_cases %>% na.omit() %>% scale()
k1<- kmeans(top10countries, centers = 2, nstart = 25)
top10countries$total_cases %>% na.omit() %>% scale()
k1<- kmeans(top10countries$total_cases, centers = 2, nstart = 25)
fviz_cluster(k1, data=top10countries)
knitr::opts_chunk$set(echo = FALSE)
install.packages("openxlsx")
library(xlsx)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
summary(country_data)
summary(world_data)
str(country_data)
str(world_data)
class(country_data$date)
class(world_data$date)
country_data$date<- as.Date(country_data$date,format = "%m/%d/%Y")
class(country_data$date)
virusData <- rbind(country_data,world_data)
head(virusData)
tail(virusData)
any(is.na(virusData))
install.packages("tidyverse")
library(tidyverse)
par(mfrow=c(1,4))
plot(world_data$new_cases)
plot(world_data$total_cases)
plot(world_data$new_deaths)
plot(world_data$total_deaths)
par(mfrow=c(1,4))
plot(country_data$new_cases)
plot(country_data$total_cases)
plot(country_data$new_deaths)
plot(country_data$total_deaths)
ggplot(virusData, aes(x=date, y=total_cases, size=total_deaths,color=location))+geom_line()
knitr::opts_chunk$set(echo = FALSE)
install.packages("openxlsx")
library(xlsx)
ggplot(virusData, aes(x=date, y=total_cases, size=total_deaths,color=location))+geom_line()
library(ggplot2)
ggplot(virusData, aes(x=date, y=total_cases, size=total_deaths,color=location))+geom_line()
ggplot(virusData, aes(x=date, y=total_deaths, size=total_cases))+geom_line()
virusData %>% ggplot(aes(date, total_cases))+geom_line()
library(dplyr)
virusData %>% ggplot(aes(date, total_cases))+geom_line()
library(dplyr)
virusData %>% ggplot(aes(date, total_cases))+geom_line()
country_data %>%
ggplot(aes(date, total_cases, group = location))+geom_line()
linearmodel <- lm(total_cases ~total_deaths, data=virusData)
summary(linearmodel)
ggplot(virusData,aes(x = total_deaths,y= total_cases))+geom_point()+stat_smooth(method = "lm", col="blue")
par(mfrow=c(1,2))
#still make a linear model
linearmodel1 <- lm(total_cases ~total_deaths, data=country_data)
#plot the model
ggplot(country_data,aes(x = total_cases,y=total_deaths))+ggtitle("country_data") +geom_point()+stat_smooth(method = "lm", col="blue")
#for world data doing the same steps
linearmodel2 <- lm(total_cases ~total_deaths, data=world_data)
ggplot(world_data,aes(x = total_cases,y=total_deaths)) +geom_point()+stat_smooth(method = "lm", col="blue")+ggtitle("world_data")
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States","Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
ggplot(top10countries,aes(x=date,y=total_cases,group = location,color = location, size = total_deaths))+geom_line()+facet_wrap(~location)
library(factoextra)
library(cluster)
par(mfrow=c(1,3))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
gap_stat<- clusGap(top10countries$total_cases, FUN=hcut,nstart = 25, K.max = 4, B=50)
library(rmarkdown)
library(rmarkdown)
render("project final.Rmd", output_format = "word_document")
library(rmarkdown)render("project final.Rmd", output_format = "word_document")
render("project final.Rmd", output_format = "word_document")
render("project final", output_format = "word_document")
library(factoextra)
library(cluster)
par(mfrow=c(1,2))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
---
title: "ConvirusData"
author: "Shunqi Zheng"
date: "2020/5/5"
output: word_document
unlink('project final_cache', recursive = TRUE)
knit_with_parameters('C:/Users/Edward/Desktop/FDU/FDU课程/FDU 2020 spring/Big Data Analytics with Hadoop & R/Project/project final.Rmd')
library(xlsx)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(factoextra)
library(cluster)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
knitr::opts_chunk$set(echo = FALSE)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
knitr::opts_chunk$set(echo = FALSE)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
library(xlsx)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(factoextra)
library(cluster)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
summary(country_data)
summary(world_data)
str(country_data)
str(world_data)
class(country_data$date)
class(world_data$date)
country_data$date<- as.Date(country_data$date,format = "%m/%d/%Y")
class(country_data$date)
virusData <- rbind(country_data,world_data)
head(virusData)
tail(virusData)
any(is.na(virusData))
#install.packages("tidyverse")
#library(tidyverse)
par(mfrow=c(1,4))
plot(world_data$new_cases)
plot(world_data$total_cases)
plot(world_data$new_deaths)
plot(world_data$total_deaths)
par(mfrow=c(1,4))
plot(country_data$new_cases)
plot(country_data$total_cases)
plot(country_data$new_deaths)
plot(country_data$total_deaths)
#library(ggplot2)
ggplot(virusData, aes(x=date, y=total_cases, size=total_deaths,color=location))+geom_line()
ggplot(virusData, aes(x=date, y=total_deaths, size=total_cases))+geom_line()
#library(dplyr)
virusData %>% ggplot(aes(date, total_cases))+geom_line()
country_data %>%
ggplot(aes(date, total_cases, group = location))+geom_line()
linearmodel <- lm(total_cases ~total_deaths, data=virusData)
summary(linearmodel)
ggplot(virusData,aes(x = total_deaths,y= total_cases))+geom_point()+stat_smooth(method = "lm", col="blue")
par(mfrow=c(1,2))
#still make a linear model
linearmodel1 <- lm(total_cases ~total_deaths, data=country_data)
#plot the model
ggplot(country_data,aes(x = total_cases,y=total_deaths))+ggtitle("country_data") +geom_point()+stat_smooth(method = "lm", col="blue")
#for world data doing the same steps
linearmodel2 <- lm(total_cases ~total_deaths, data=world_data)
ggplot(world_data,aes(x = total_cases,y=total_deaths)) +geom_point()+stat_smooth(method = "lm", col="blue")+ggtitle("world_data")
subcountry_data <- filter(country_data,date == "2020-02-15")%>%
arrange(.,total_cases)%>% tail(.,10)
subcountry_data
#Making a subset of selecting top 10 countries:
top10countries <- country_data[ country_data$location %in% c("United States","Vietnam","Taiwan","Malaysia","South Korea", "Thailand","Japan","Singapore","International","China"),]
#ggplot the subset with labels of locations
ggplot(top10countries,aes(x=date, y= total_cases, color = location,size=total_deaths))+geom_point()
ggplot(top10countries,aes(x=date,y=total_cases,group = location,color = location, size = total_deaths))+geom_line()+facet_wrap(~location)
#library(factoextra)
#library(cluster)
par(mfrow=c(1,2))
fviz_nbclust(top10countries,FUN=hcut, method = "wss")
fviz_nbclust(top10countries,FUN=hcut, method = "silhouette")
gap_stat<- clusGap(top10countries$total_cases, FUN=hcut,nstart = 25, K.max = 4, B=50)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
knitr::opts_chunk$set(error = TRUE)
country_data <-read.csv("country.csv")
world_data <- read.xlsx("world.xlsx", sheetIndex = 1)
library(openxlsx)
library(xlsx)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(factoextra)
library(cluster)
